{"version":3,"sources":["component/ModalPage.js","component/Body.js","App.js","serviceWorker.js","index.js"],"names":["ModalPage","props","Modal","size","centered","show","modalShow","onHide","setModalShow","Header","Title","Body","Form","Control","value","dataState","inputNama","onChange","e","handleInput","style","marginTop","marginBottom","type","placeholder","inputJabatan","inputJK","inputTgl","Footer","Button","onClick","closeModal","variant","simpanData","state","dataKaryawan","valueSearch","idInput","panggilSemua","bind","search","hapusData","clearInput","panggilById","id","fetch","then","response","json","hasil","setState","nama_karyawan","jabatan","jenis_kelamin","tanggal_lahir","this","alert","method","body","JSON","stringify","headers","result","target","Alert","Container","Row","Col","lg","varian","reverse","filter","valueFilter","toLowerCase","includes","map","index","Card","width","marginLeft","key","Img","src","Text","marginRight","Component","App","React","useState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eff8c031.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nfunction ModalPage(props){\r\n  return(\r\n\r\n      <Modal size=\"lg\" centered\r\n      show={props.modalShow}\r\n      onHide={()=>props.setModalShow(true)}\r\n      >\r\n\r\n        <Modal.Header>\r\n          <Modal.Title>Detail Data</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n\r\n          <Form.Control value={props.dataState.inputNama}\r\n            onChange={(e)=>props.handleInput('inputNama',e)} style={{marginTop: '20px', marginBottom: '20px'}} type=\"text\"\r\n            placeholder=\"Nama\" />\r\n          <Form.Control value={props.dataState.inputJabatan}\r\n            onChange={(e)=>props.handleInput('inputJabatan',e)} type=\"text\"\r\n            placeholder=\"Jabatan\" />\r\n          <Form.Control value={props.dataState.inputJK}\r\n            onChange={(e)=>props.handleInput('inputJK',e)} style={{marginTop: '20px', marginBottom: '20px'}}\r\n            type=\"text\"\r\n            placeholder=\"Jenis Kelamin\" />\r\n          <Form.Control value={props.dataState.inputTgl}\r\n            onChange={(e)=>props.handleInput('inputTgl',e)} type=\"date\"\r\n            placeholder=\"Tanggal Lahir\" />\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button\r\n          onClick={()=>props.closeModal()}\r\n          variant=\"secondary\">Close</Button>\r\n          <Button onClick={()=>props.simpanData()} variant=\"success\">Simpan</Button>\r\n        </Modal.Footer>\r\n\r\n      </Modal>\r\n  )\r\n}\r\nexport default ModalPage;\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport ModalPage from './ModalPage'\r\n\r\n\r\nclass Body extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      dataKaryawan:[],\r\n      valueSearch: \"\",\r\n      inputNama:'',\r\n      inputJabatan:'',\r\n      inputJK:'',\r\n      inputTgl:'',\r\n      idInput:''\r\n\r\n    }\r\n    this.panggilSemua = this.panggilSemua.bind(this)\r\n    this.search = this.search.bind(this)\r\n    this.hapusData = this.hapusData.bind(this)\r\n    this.closeModal = this.closeModal.bind(this)\r\n    this.handleInput = this.handleInput.bind(this)\r\n    this.clearInput = this.clearInput.bind(this)\r\n    this.simpanData = this.simpanData.bind(this)\r\n    this.panggilById = this.panggilById.bind(this)\r\n\r\n  }\r\n\r\n\r\n\r\n  panggilById(id){\r\n    // console.log(id)\r\n    fetch(`http://localhost:3000/data-karyawan/${id}`)\r\n        .then((response)=>response.json())\r\n        .then((hasil=>{\r\n          this.props.setModalShow(true)\r\n          // console.log(hasil)\r\n          this.setState(\r\n            {\r\n            inputNama: hasil.nama_karyawan,\r\n            inputJabatan: hasil.jabatan,\r\n            inputJK: hasil.jenis_kelamin,\r\n            inputTgl: hasil.tanggal_lahir,\r\n            idInput: hasil.id\r\n            }\r\n          )\r\n        }))\r\n  }\r\n\r\n\r\n\r\n\r\n  simpanData(){\r\n    if (this.state.inputNama ===\"\" || this.state.inputJabatan\r\n    === \"\" || this.state.inputJK === \"\" || this.state.inputTgl ===\"\" ){\r\n\r\n      alert(\"Silahkan isi data terlebih dahulu\")\r\n    }else if(this.state.idInput ===\"\"){\r\n      fetch('http://localhost:3000/data-karyawan', {\r\n\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          nama_karyawan: this.state.inputNama,\r\n          jabatan: this.state.inputJabatan,\r\n          jenis_kelamin: this.state.inputJK,\r\n          tanggal_lahir: this.state.inputTgl,\r\n        }),\r\n        headers:{\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      }).then((response)=>response.json())\r\n          .then((result=>{\r\n            this.closeModal()\r\n            this.panggilSemua()\r\n            // console.log(result)\r\n          }))\r\n        }else{\r\n          // console.log(\"Perintah Untuk Edit akan ditulis di sini\");\r\n          fetch(`http://localhost:3000/data-karyawan/${this.state.idInput}`,{\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n              nama_karyawan: this.state.inputNama,\r\n              jabatan: this.state.inputJabatan,\r\n              jenis_kelamin: this.state.inputJK,\r\n              tanggal_lahir: this.state.inputTgl,\r\n          }),\r\n          headers:{\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n          },\r\n        }).then((response)=>response.json())\r\n            .then((hasil=>{\r\n              this.panggilSemua();\r\n              this.props.setModalShow(false);\r\n              this.clearInput();\r\n            }))\r\n          }\r\n        }\r\n\r\n\r\n\r\n  handleInput(value, e){\r\n    // console.log(e.target.value)\r\n    this.setState({[value]: e.target.value})\r\n  }\r\n\r\n\r\n\r\n\r\n  closeModal(){\r\n    // console.log(\"close modal\")\r\n      this.props.setModalShow(false)\r\n      this.clearInput()\r\n  }\r\n\r\n\r\n  clearInput(){\r\n    this.setState(\r\n      {\r\n        inputNama:'',\r\n        inputJabatan:'',\r\n        inputJK:'',\r\n        inputTgl:'',\r\n        idInput:''\r\n    })\r\n  }\r\n\r\n\r\n\r\n  hapusData(id){\r\n    // console.log(id)\r\n    fetch(`http://localhost:3000/data-karyawan/${id}`, {\r\n        method: 'DELETE',\r\n      }).then((response=>{\r\n        alert('Data Sudah Terhapus')\r\n        this.panggilSemua()\r\n      }))\r\n  }\r\n\r\n\r\n  search(e){\r\n    this.setState({valueSearch: e.target.value})\r\n  }\r\n\r\n\r\n  panggilSemua(){\r\n  fetch(`http://localhost:3000/data-karyawan`)\r\n      .then((response)=> response.json())\r\n      .then((hasil)=> this.setState({dataKaryawan: hasil}))\r\n\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    this.panggilSemua()\r\n  }\r\n  render(){\r\n    return(\r\n      <>\r\n        <Alert variant=\"success\"><h3><center>Data Karyawan</center></h3></Alert>\r\n\r\n          <Container>\r\n\r\n          <ModalPage\r\n          modalShow={this.props.modalShow}\r\n          setModalShow={this.props.setModalShow}\r\n          closeModal={this.closeModal}\r\n          dataState={this.state}\r\n          handleInput={this.handleInput}\r\n          simpanData={this.simpanData}\r\n           />\r\n\r\n\r\n          <Row style={{marginTop: '30px'}}>\r\n            <Col lg ={10}>\r\n              <Form.Control type=\"text\" placeholder=\"Cari data berdasarkan nama karyawan\"\r\n              value={this.state.valueSearch} onChange={(e)=>this.search(e)} />\r\n            </Col>\r\n\r\n            <Col lg={2}>\r\n              <Button  onClick={()=>this.props.setModalShow(true)}\r\n              varian=\"primary\">Tambah Data</Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n                {\r\n                  this.state.dataKaryawan.reverse().filter(valueFilter =>\r\n                    valueFilter.nama_karyawan.toLowerCase().includes(this.state.valueSearch.toLowerCase())).map((value, index)=>{\r\n                    return(\r\n                      <Card style={{ width:'200px', marginTop:'30px', marginLeft:'20px'}} key={index}>\r\n                        <Card.Img variant=\"Top\" src=\"\" />\r\n                        <Card.Body>\r\n                          <Card.Title>{value.nama_karyawan}</Card.Title>\r\n                          <Card.Text>{value.jabatan}</Card.Text>\r\n                          <Card.Text>{value.jenis_kelamin}</Card.Text>\r\n                          <Card.Text>{value.tanggal_lahir}</Card.Text>\r\n                        </Card.Body>\r\n\r\n                        <Card.Footer>\r\n                          <Button onClick={()=>this.hapusData(value.id)}  style={{marginRight: '5%'}} variant=\"outline-danger\">Hapus</Button>\r\n                          <Button onClick={()=>this.panggilById(value.id)} variant=\"outline-primary\">Edit</Button>\r\n                        </Card.Footer>\r\n                      </Card>\r\n                    )\r\n                  })\r\n              }\r\n          </Row>\r\n\r\n\r\n          </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Body;\r\n","import React from 'react';\nimport './css/bootstrap.min.css';\nimport Body from './component/Body'\n\n\n\nfunction App() {\n\n  const[modalShow, setModalShow] = React.useState(false)\n\n  return (\n    <div>\n      <Body\n        modalShow={modalShow}\n        setModalShow={setModalShow}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}